<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nick.dao.FriendRelationMapper" >
  <resultMap id="BaseResultMap" type="nick.model.FriendRelation" >
    <id column="FRIEND_ID" property="friendId" jdbcType="INTEGER" />
    <result column="FRIEND_USER1" property="friendUser1" jdbcType="INTEGER" />
    <result column="FRIEND_USER2" property="friendUser2" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    FRIEND_ID, FRIEND_USER1, FRIEND_USER2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_friend_relation
    where FRIEND_ID = #{friendId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_friend_relation
    where FRIEND_ID = #{friendId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="nick.model.FriendRelation" >
    insert into t_friend_relation (FRIEND_ID, FRIEND_USER1, FRIEND_USER2
      )
    values (#{friendId,jdbcType=INTEGER}, #{friendUser1,jdbcType=INTEGER}, #{friendUser2,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="nick.model.FriendRelation" >
    insert into t_friend_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendId != null" >
        FRIEND_ID,
      </if>
      <if test="friendUser1 != null" >
        FRIEND_USER1,
      </if>
      <if test="friendUser2 != null" >
        FRIEND_USER2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendId != null" >
        #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendUser1 != null" >
        #{friendUser1,jdbcType=INTEGER},
      </if>
      <if test="friendUser2 != null" >
        #{friendUser2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="nick.model.FriendRelation" >
    update t_friend_relation
    <set >
      <if test="friendUser1 != null" >
        FRIEND_USER1 = #{friendUser1,jdbcType=INTEGER},
      </if>
      <if test="friendUser2 != null" >
        FRIEND_USER2 = #{friendUser2,jdbcType=INTEGER},
      </if>
    </set>
    where FRIEND_ID = #{friendId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="nick.model.FriendRelation" >
    update t_friend_relation
    set FRIEND_USER1 = #{friendUser1,jdbcType=INTEGER},
      FRIEND_USER2 = #{friendUser2,jdbcType=INTEGER}
    where FRIEND_ID = #{friendId,jdbcType=INTEGER}
  </update>
</mapper>