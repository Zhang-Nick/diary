<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nick.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="nick.model.Comment" >
    <id column="COMMENT_ID" property="commentId" jdbcType="INTEGER" />
    <result column="COMMENT_DIARY_ID" property="commentDiaryId" jdbcType="INTEGER" />
    <result column="COMMENT_USER_ID" property="commentUserId" jdbcType="INTEGER" />
    <result column="COMMENT_CONTENT" property="commentContent" jdbcType="VARCHAR" />
    <result column="COMMENT_TIME" property="commentTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    COMMENT_ID, COMMENT_DIARY_ID, COMMENT_USER_ID, COMMENT_CONTENT, COMMENT_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_comment
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="nick.model.Comment" >
    insert into t_comment (COMMENT_ID, COMMENT_DIARY_ID, COMMENT_USER_ID, 
      COMMENT_CONTENT, COMMENT_TIME)
    values (#{commentId,jdbcType=INTEGER}, #{commentDiaryId,jdbcType=INTEGER}, #{commentUserId,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="nick.model.Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        COMMENT_ID,
      </if>
      <if test="commentDiaryId != null" >
        COMMENT_DIARY_ID,
      </if>
      <if test="commentUserId != null" >
        COMMENT_USER_ID,
      </if>
      <if test="commentContent != null" >
        COMMENT_CONTENT,
      </if>
      <if test="commentTime != null" >
        COMMENT_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentDiaryId != null" >
        #{commentDiaryId,jdbcType=INTEGER},
      </if>
      <if test="commentUserId != null" >
        #{commentUserId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="nick.model.Comment" >
    update t_comment
    <set >
      <if test="commentDiaryId != null" >
        COMMENT_DIARY_ID = #{commentDiaryId,jdbcType=INTEGER},
      </if>
      <if test="commentUserId != null" >
        COMMENT_USER_ID = #{commentUserId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        COMMENT_CONTENT = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        COMMENT_TIME = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="nick.model.Comment" >
    update t_comment
    set COMMENT_DIARY_ID = #{commentDiaryId,jdbcType=INTEGER},
      COMMENT_USER_ID = #{commentUserId,jdbcType=INTEGER},
      COMMENT_CONTENT = #{commentContent,jdbcType=VARCHAR},
      COMMENT_TIME = #{commentTime,jdbcType=TIMESTAMP}
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>